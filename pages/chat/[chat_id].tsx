import { Conversation } from "@prisma/client";
import Head from "next/head";
import { useRouter } from "next/router";
import { Dispatch, SetStateAction, useEffect, useState } from "react";
import Chat from ".";
import useProtectedChat from "../../hooks/useProtectedPage";
import { methods } from "../../utils/methods";

async function GetMessages(
  setMessages: Dispatch<SetStateAction<Conversation[]>>,
  chat_id: string
) {
  const chatResponse = await fetch(
    `http://localhost:3000/api/chat/${chat_id}/getMessages`,
    {
      method: methods.get,
    }
  );
  const data = await chatResponse.json();
  setMessages(data);
}

export default function ChatPage() {
  const router = useRouter();

  const [messages, setMessages] = useState([] as Conversation[]);

  useEffect(() => {
    const { chat_id } = router.query;
    GetMessages(setMessages, chat_id as string);
  }, [router.query]);

  useEffect(() => {
    console.log(messages);
  }, [messages]);

  return (
    <div className="h-screen">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-col justify-between h-full">
        Test
        {/* {chat ? (
          <Chat type={}  />
        ) : (
          <p>no data</p>
        )} */}
      </div>
    </div>
  );
}
